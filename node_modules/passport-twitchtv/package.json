{
  "name": "passport-twitchtv",
  "version": "0.1.1",
  "description": "Twitch.tv authentication strategy for Passport.",
  "keywords": [
    "passport",
    "twitchtv",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/johnkernke/passport-twitchtv.git"
  },
  "bugs": {
    "url": "http://github.com/johnkernke/passport-twitchtv/issues"
  },
  "author": {
    "name": "John Kernke",
    "email": "john@kernke.org"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licences/MIT"
    }
  ],
  "main": "./lib/passport-twitchtv",
  "dependencies": {
    "pkginfo": "0.2.x",
    "passport-oauth": "0.1.x"
  },
  "devDependencies": {
    "vows": "0.x"
  },
  "scripts": {
    "test": "NODE_PATH=lib node_modules/.bin/vows test/*-test.js"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "# Passport-Twitch.tv\n\n[![Build Status](https://secure.travis-ci.org/johnkernke/passport-twitchtv.png)](http://travis-ci.org/johnkernke/passport-twitchtv)\n\n[Passport](https://github.com/jaredhanson/passport) strategy for authenticating\nwith [Twtich.tv](http://www.twitch.tv/) using the OAuth 2.0 API.\n\nThis module lets you authenticate using Twitch.tv in your Node.js applications.\nBy plugging into Passport, Twitch.tv authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-twitchtv\n\n## Usage\n\n#### Configure Strategy\n\nThe Twitch.tv authentication strategy authenticates users using a Twitch.tv\naccount and OAuth tokens.  The strategy requires a `verify` callback, which\naccepts these credentials and calls `done` providing a user, as well as\n`options` specifying a consumer key, consumer secret, and callback URL.\n\n    passport.use(new TwitchtvStrategy({\n        clientID: TWITCHTV_CLIENT_ID,\n        clientSecret: TWITCHTV_CLIENT_SECRET,\n        callbackURL: \"http://127.0.0.1:3000/auth/twitchtv/callback\"\n      },\n      function(accessToken, refreshToken, profile, done) {\n        User.findOrCreate({ twitchtvId: profile.id }, function (err, user) {\n          return done(err, user);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'twitchtv'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get('/auth/twitchtv',\n      passport.authenticate('twitchtv'));\n    \n    app.get('/auth/twitchtv/callback', \n      passport.authenticate('twitchtv', { failureRedirect: '/login' }),\n      function(req, res) {\n        // Successful authentication, redirect home.\n        res.redirect('/');\n      });\n\n## Examples\n\nFor a complete, working example, refer to the [login example](https://github.com/johnkernke/passport-twitchtv/tree/master/examples/login).\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/johnkernke/passport-twitchtv.png)](http://travis-ci.org/johnkernke/passport-twitchtv)\n\n## Credits\n\n  - [John Kernke](http://github.com/johnkernke)\n  - [Jared Hanson](http://github.com/jaredhanson) (Used [passport-justintv](https://github.com/jaredhanson/passport-justintv) as a base to work off)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2011-2013 John Kernke\n",
  "readmeFilename": "README.md",
  "_id": "passport-twitchtv@0.1.1",
  "_from": "passport-twitchtv@0.1.1"
}
